# TST NSLS-II Device Configuration
# Device instances and configurations for the TST beamline

# Simulation devices (pure ophyd - no custom creators needed)
apsbits.utils.sim_creator.predefined_device:
- { creator: ophyd.sim.motor, name: sim_motor }
- { creator: ophyd.sim.noisy_det, name: sim_det }

apstools.devices.SimulatedApsPssShutterWithStatus:
- name: shutter
  labels: [ "shutters", "baseline" ]

# TST-specific devices using individual device classes

# Motors - using TSTMotor class
tst_instrument.devices.tst_motor.TSTMotor:
- name: rot_motor
  prefix: "XF:31ID1-OP:1{CMT:1-Ax:Rot}Mtr"
  labels: ["motors", "rotation", "baseline"]

# Detectors - using TSTDetector class
tst_instrument.devices.tst_detector.TSTDetector:
- name: manta1
  prefix: "XF:31ID1-ES{GigE-Cam:1}"
  labels: ["detectors", "cameras"]
- name: manta2
  prefix: "XF:31ID1-ES{GigE-Cam:2}"
  labels: ["detectors", "cameras"]

# PandA trigger box - using TSTPanda class (temporarily disabled due to p4p dependency)
# tst_instrument.devices.tst_panda.TSTPanda:
# - name: panda1
#   prefix: "XF:31ID1-ES:1{Panda:1}"
#   labels: ["detectors", "triggers", "panda"]

# Flyers (ophyd_async) - created dynamically in flyers.py
# These will be created when needed by plans
# - default_flyer, manta_flyer, panda_flyer
